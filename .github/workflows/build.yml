name: CI
on:
  - push
  - pull_request

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            docker: debian
            python-version: "3.9"
          - os: ubuntu-latest
            docker: ubuntu
            python-version: "3.9"
          - os: ubuntu-latest
            docker: fedora
            python-version: "3.9"
          - os: macos-latest
            python-version: "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: ./install-dev
      - name: Lint
        run: ./lint
      - name: Test
        run: ./test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_IMAGE: ${{ matrix.docker }}
      - name: Upload coverage
        run: |
          ./coverage-report
          poetry run coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true

  coverage:
    needs: ci
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finish coverage upload
      run: |
        pip3 install --upgrade coveralls
        coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: ci
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Calculate version
        id: tag
        uses: frabert/replace-string-action@v2.0
        with:
          pattern: '^refs/tags/'
          string: ${{ github.ref }}
          replace-with: ''
      - name: Check version
        run: |
          [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: ./install-dev
      - name: Publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry version ${{ steps.tag.outputs.replaced }}
          poetry build
          poetry publish
