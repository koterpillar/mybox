#!/bin/sh

set -eu

OPT_DEVELOPMENT=""
while [ $# -gt 0 ]; do
  case "$1" in
    --development)
      OPT_DEVELOPMENT="true"
      shift
      ;;
    *)
      echo "Unknown argument: $1" >&2
      exit 1
      ;;
  esac
done

command_exists() {
  command -v "$1" >/dev/null 2>&1
}

ensure() {
  COMMAND="$1"
  if [ "$#" -gt 1 ]
  then
    # ensure COMMAND PACKAGE1 PACKAGE2 ...
    shift
  fi
  # else: ensure COMMAND (package is the same as COMMAND)

  if ! command_exists "$COMMAND"
  then
    $INSTALLER "$@"
  fi
}

sudo_() {
  if [ "$(id -u)" -eq 0 ]
  then
    "$@"
  else
    sudo "$@"
  fi
}

download() {
  URL="$1"
  DESTINATION="$2"

  if [ -L "$DESTINATION" ]
  then
    rm "$DESTINATION"
  fi
  if ! [ -f "$DESTINATION" ]
  then
    mkdir -p "$(dirname "$DESTINATION")"
    touch -t 200001010000 "$DESTINATION"
  fi

  TEMP_FILE=$(mktemp)
  trap 'rm -f "$TEMP_FILE"' EXIT
  curl -fsSL "$URL" -z "$DESTINATION" -o "$TEMP_FILE"
  if [ -s "$TEMP_FILE" ]
  then
    mv "$TEMP_FILE" "$DESTINATION"
    chmod +rx "$DESTINATION"
  fi
}

OS_KIND=$(uname -s)
ARCH=$(uname -m)

case "$OS_KIND" in
  Darwin)
    brew_env() {
      if [ -d /opt/homebrew ]
      then
        eval "$(/opt/homebrew/bin/brew shellenv)"
      fi
    }
    brew_env

    if ! command_exists brew
    then
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      brew_env
    fi

    INSTALLER='brew install'
    ;;
  Linux)
    DISTRO=$(grep '^ID=' /etc/os-release | cut -d = -f 2)

    case $DISTRO in
      debian|ubuntu)
        INSTALLER='sudo_ apt install --yes'
        if [ -z "$(ls -A /var/lib/apt/lists)" ]
        then
          sudo_ apt update
        fi
        ;;
      fedora)
        INSTALLER='sudo_ dnf install --assumeyes'
        ;;
    esac

    ensure curl
    ensure sudo
    ;;
esac

if [ -z "$OPT_DEVELOPMENT" ]
then
  download \
    "https://github.com/koterpillar/mybox/releases/latest/download/mybox-${OS_KIND}-${ARCH}" \
    "$HOME/.local/bin/mybox"
fi
