#!/usr/bin/env bash

set -euo pipefail

command_exists() {
  type -f "$1" >/dev/null 2>&1
}

ensure() {
  COMMAND="$1"
  shift
  if [ "$#" -ge 1 ]
  then
    PACKAGES=("$@")
  else
    PACKAGES=("$COMMAND")
  fi
  if ! command_exists "$COMMAND"
  then
    "${INSTALLER[@]}" "${PACKAGES[@]}"
  fi
}

case "$OSTYPE" in
  darwin*)
    if ! command_exists brew
    then
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    INSTALLER=(brew install)

    ensure python3
    ensure gtar gnu-tar
    ;;
  linux*)
    DISTRO=$(grep '^ID=' /etc/os-release | cut -d = -f 2)

    sudo_() {
      if [ "$EUID" -eq 0 ]
      then
        "$@"
      else
        sudo "$@"
      fi
    }

    case $DISTRO in
      debian|ubuntu)
        INSTALLER=(sudo_ apt install --yes)
        if [ -z "$(ls -A /var/lib/apt/lists)" ]
        then
          sudo_ apt update
        fi

        ensure curl
        ensure git
        ensure sudo
        ensure python3 python3{,-{pip,venv}}
        ensure unzip
        ;;
      fedora)
        INSTALLER=(sudo_ dnf install --assumeyes)

        ensure git
        ensure bzip2
        ensure xz
        ensure unzip
        ensure chsh util-linux-user
        ;;
    esac
    ;;
esac

if ! command_exists pipx
then
  # FIXME: autoupdate pipx
  mkdir -p /usr/local/mybox
  curl -sSL https://github.com/pypa/pipx/releases/latest/download/pipx.pyz -o /usr/local/bin/pipx
  chmod +x /usr/local/bin/pipx
fi

if [ "${1:-}" != "--development" ]
then
  if pipx list --short | grep -qE '^mybox ' >/dev/null 2>&1
  then
    pipx upgrade mybox
  else
    pipx install mybox
  fi
fi
