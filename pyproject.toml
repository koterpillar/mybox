[tool.poetry]
name = "mybox"
version = "0.0.1"
description = "Manage the configuration and tools on your workstation without bothering the OS too much"
readme = "README.md"
repository = "https://github.com/koterpillar/mybox"
authors = ["Alexey Kotlyarov <a@koterpillar.com>"]
license = "GPL-3.0-or-later"

[tool.poetry.dependencies]
pydantic = "^2.9.2"
python = "^3.11"
PyYAML = "^6.0.2"
trio = "^0.26.2"
tqdm = "^4.66.5"
typed-argparse = "^0.3.1"
jsonpath-ng = "^1.7.0"
beautifulsoup4 = "^4.12.3"
httpx = "^0.27.2"

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
coverage = {extras = ["toml"], version = "^7.6.3"}
fawltydeps = "^0.17.0"
isort = "^5.13.2"
mypy = "^1.12.0"
pylint = "^3.3.1"
pylint-pydantic = "^0.3.2"
pytest = "^8.3.3"
pytest-trio = "^0.8.0"
trio-typing = {extras = ["mypy"], version = "^0.10.0"}
types-beautifulsoup4 = "^4.12.0.7"
types-PyYAML = "^6.0.12.12"
types-tqdm = "^4.66.0.4"

[tool.poetry.scripts]
mybox = "mybox.main:sync_main"

[build-system]
requires = ["poetry-core>=1.9.1"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.mypy]
disable_error_code = [
    "safe-super",
]

[tool.pylint.main]
jobs = 0
load-plugins = ["pylint_pydantic"]

[tool.pylint.messages_control]
disable = [
    "C",
    "R",
    "broad-exception-raised",
    "fixme",
    "invalid-name",
    "method-cache-max-size-none",
    "missing-timeout",
    "no-else-raise",
    "no-else-return",
    "unspecified-encoding",
]
extension-pkg-whitelist = "pydantic"

[tool.pylint.reports]
output-format = "colorized"

[tool.fawltydeps]
ignore_undeclared = ["_typeshed"]
ignore_unused = [
    "black",
    "coverage",
    "fawltydeps",
    "isort",
    "mypy",
    "pylint",
    "pylint-pydantic",
    "pytest-trio",
]

[tool.pytest.ini_options]
trio_mode = true

[tool.coverage.run]
parallel = true
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract",
    "@overload",
    "assert False",
    "pytest.skip",
    "raise NotImplementedError"
]
