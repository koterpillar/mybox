[tool.poetry]
name = "mybox"
version = "0.0.1"
description = "Manage the configuration and tools on your workstation without bothering the OS too much"
readme = "README.md"
repository = "https://github.com/koterpillar/mybox"
authors = ["Alexey Kotlyarov <a@koterpillar.com>"]
license = "GPL-3.0-or-later"

[tool.poetry.dependencies]
pydantic = "^1.10.7"
python = "^3.9"
PyYAML = "^6.0"
requests = "^2.28.2"
trio = "^0.22.0"
tqdm = "^4.64.1"
typed-argparse = "^0.2.9"
jsonpath-ng = "^1.5.3"
beautifulsoup4 = "^4.11.2"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
coverage = {extras = ["toml"], version = "^6.5.0"}
coveralls = "^3.3.1"
fawltydeps = "^0.7.1"
isort = "^5.12.0"
mypy = "^1.0.1"
pylint = "^2.16.2"
pytest = "^7.2.1"
pytest-trio = "^0.8.0"
trio-typing = {extras = ["mypy"], version = "^0.7.0"}
types-beautifulsoup4 = "^4.11.6.6"
types-PyYAML = "^6.0.12.6"
types-requests = "^2.28.11.13"
types-tqdm = "^4.64.7.13"

[tool.poetry.scripts]
mybox = "mybox.main:sync_main"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.mypy]
disable_error_code = [
    "safe-super",
]

[tool.pylint.main]
jobs = 0

[tool.pylint.messages_control]
disable = [
    "C",
    "R",
    "broad-exception-raised",
    "fixme",
    "invalid-name",
    "method-cache-max-size-none",
    "missing-timeout",
    "no-else-raise",
    "no-else-return",
    "unspecified-encoding",
]

[tool.pylint.reports]
output-format = "colorized"

[tool.fawltydeps]
ignore_undeclared = ["_typeshed"]
ignore_unused = [
    "black",
    "coverage",
    "coveralls",
    "fawltydeps",
    "isort",
    "mypy",
    "pylint",
    "pytest-trio",
    "trio-typing",
    "types-PyYAML",
    "types-beautifulsoup4",
    "types-requests",
    "types-tqdm",
]

[tool.pytest.ini_options]
trio_mode = true

[tool.coverage.run]
parallel = true
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract",
    "@overload",
    "assert False",
    "pytest.skip",
    "raise NotImplementedError"
]
