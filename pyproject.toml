[tool.poetry]
name = "mybox"
version = "0.0.1"
description = "Manage the configuration and tools on your workstation without bothering the OS too much"
readme = "README.md"
repository = "https://github.com/koterpillar/mybox"
authors = ["Alexey Kotlyarov <a@koterpillar.com>"]
license = "GPL-3.0-or-later"

[tool.poetry.dependencies]
python = "^3.9"
PyYAML = "^6.0"
requests = "^2.28.1"
trio = "^0.22.0"
tqdm = "^4.64.0"
typed-argparse = "^0.2.4"

[tool.poetry.dev-dependencies]
black = "^22.6.0"
coverage = {extras = ["toml"], version = "^6.4.3"}
coveralls = "^3.3.1"
isort = "^5.10.1"
mypy = "^0.961"
pylint = "^2.14.5"
pytest = "^7.1.2"
pytest-trio = "^0.7.0"
trio-typing = {extras = ["mypy"], version = "^0.7.0"}
types-PyYAML = "^6.0.9"
types-requests = "^2.28.0"

[tool.poetry.scripts]
mybox = "mybox.main:sync_main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.pylint.messages_control]
disable = [
    "C",
    "R",
    "fixme",
    "invalid-name",
    "method-cache-max-size-none",
    "missing-timeout",
    "no-else-raise",
    "no-else-return",
    "unspecified-encoding",
]

[tool.pylint.reports]
output-format = "colorized"

[tool.pytest.ini_options]
trio_mode = true

[tool.coverage.run]
parallel = true
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract",
    "raise NotImplementedError"
]
