#!/usr/bin/env bash

set -euo pipefail

OPT_FORMAT=""
OPT_PYTHON="true"
OPT_HASKELL="true"
while [ $# -gt 0 ]; do
  case "$1" in
    --format)
      OPT_FORMAT="true"
      shift
      ;;
    --no-python)
      OPT_PYTHON=""
      shift
      ;;
    --no-haskell)
      OPT_HASKELL=""
      shift
      ;;
    *)
      echo "Unknown argument: $1" >&2
      exit 1
      ;;
  esac
done

# macOS's bash (3.x) can't interpolate empty arrays into parameters under
# nounset; keep command and args together as a workaround.
ISORT=(isort)
BLACK=(black)
FOURMOLU=(fourmolu)
if [ -z "$OPT_FORMAT" ]
then
  ISORT+=(--check)
  BLACK+=(--check)
  FOURMOLU+=(--mode check)
else
  FOURMOLU+=(--mode inplace)
fi

DIR=$(cd "$(dirname "$0")" && pwd)

# shellcheck disable=SC2046
shellcheck $(grep -lER --exclude-dir .git --exclude-dir .stack-work '^#!.+(ba)?sh$' "$DIR")

if [ -n "$OPT_HASKELL" ]
then
  "${FOURMOLU[@]}" "${DIR}/app" "${DIR}/src" "${DIR}/test"
fi

if [ -n "$OPT_PYTHON" ]
then
  PYTHON=("${DIR}/mybox" "${DIR}/tests")

  poetry run "${ISORT[@]}" "${PYTHON[@]}"
  poetry run "${BLACK[@]}" "${PYTHON[@]}"
  poetry run mypy "${PYTHON[@]}"
  poetry run pylint "${PYTHON[@]}"
  poetry run fawltydeps
fi
